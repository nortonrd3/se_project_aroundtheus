!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_toggleButtonState(e){this._hasInvalidInput(e)?this.disableButton():this._enableButton()}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_setEventListeners(){const e=Array.from(this._formElement.querySelectorAll(this._inputSelector));this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(e),e.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState(e)}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class t{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this.id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleLikeIcon=r,this.handleDeleteCard=i}_setEventListeners(){this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this.handleDeleteCard(this)})),this._cardImageElement.addEventListener("click",(()=>{this._handleImagePreview(this._name,this._link)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon(this)}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_renderLikes(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}handleLike(e){this._isLiked=e,this._renderLikes()}getCardId(){return this.id}getIsLiked(){return this._isLiked}remove(){this._cardElement.remove(),this._cardElement=null}_handleImagePreview(){this._handleImageClick(this._name,this._link)}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTitleElement.textContent=this._name,this._setEventListeners(),this._renderLikes(this._isLiked),this._cardElement}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class r extends s{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=s,this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent,this._inputList=Array.from(this._popupForm.querySelectorAll(".modal__input"))}_getInputValues(){return this._popupFormValues={},this._inputList.forEach((e=>{this._popupFormValues[e.name]=e.value})),this._popupFormValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}renderLoadingText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}}class i{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-edit-modal"),l=document.querySelector("#add-card-modal"),d=document.querySelector("#edit-avatar-modal"),c=document.querySelector("#profile-title-input"),h=document.querySelector("#profile-description-input"),u=a.querySelector(".modal__form"),_=l.querySelector(".modal__form"),m=document.querySelector(".profile__add-button"),p=document.querySelector(".profile__avatar-button"),v=d.querySelector(".modal__form");function E(e,t){w.open(e,t)}p.addEventListener("click",(()=>q.open())),o.addEventListener("click",(()=>{const e=S.getUserInfo();c.value=e.name,h.value=e.description,B.open()})),m.addEventListener("click",(()=>C.open()));const S=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._name=document.querySelector(t),this._job=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,description:this._job.textContent,avatar:this._avatar.src}}setUserInfo(e){this._name.textContent=e.title,this._job.textContent=e.description}updateAvatar(e){this._avatar.src=e}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__image"}),b=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handlePromise(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handlePromise)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handlePromise)}getAllData(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}updateUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.title,about:e.description})}).then(this._handlePromise)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._handlePromise)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handlePromise)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handlePromise)}addCard(e){let{name:t,link:s,_id:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s,_id:r})}).then(this._handlePromise)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handlePromise)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"6f07cb37-e9a8-4f19-ad7e-e33ed7b58580","Content-Type":"application/json"}});let L;b.getAllData().then((e=>{let[t,s]=e;S.updateAvatar(s.avatar),S.setUserInfo({title:s.name,description:s.about}),L=new i({items:t,renderer:g},".cards__list"),L.renderItems()})).catch((e=>console.error(e)));const f=new e(n,_);f.enableValidation(),new e(n,u).enableValidation();const k=new e(n,v);k.enableValidation();const g=e=>{const s=function(e){return new t(e,"#card-template",E,y,I).getView()}(e);L.addItem(s)};function y(e){e.getIsLiked()?b.removeLike(e.getCardId()).then((()=>{e.handleLike(!1)})).catch((e=>{console.error(e)})):b.addLike(e.getCardId()).then((()=>{e.handleLike(!0)})).catch((e=>{console.error(e)}))}function I(e){x.open(),x.confirmDeletion((()=>{b.deleteCard(e.getCardId()).then((()=>{e.remove(),x.close()})).catch((e=>{console.error("Error deleting card",e)}))}))}const C=new r({popupSelector:"#add-card-modal",handleFormSubmit:function(e){C.renderLoadingText(!0),b.addCard({name:e.name,link:e.link,_id:e.id,isLiked:e.isLiked}).then((e=>{g(e),C.close(),_.reset(),f.disableButton()})).catch((e=>{console.error("Error while adding card",e)})).finally((()=>{C.renderLoadingText(!1)}))}});C.setEventListeners();const B=new r({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){B.renderLoadingText(!0),b.updateUserInfo(e).then((e=>{S.setUserInfo({title:e.name,description:e.about}),B.close()})).catch((e=>{console.error(e)})).finally((()=>{B.renderLoadingText(!1)}))}});B.setEventListeners();const q=new r({popupSelector:"#edit-avatar-modal",handleFormSubmit:function(e){q.renderLoadingText(!0),b.updateAvatar(e).then((e=>{S.updateAvatar(e.avatar),q.close(),v.reset(),k.disableButton()})).catch((e=>{console.error("Error updating avatar",e)})).finally((()=>{q.renderLoadingText(!1)}))}});q.setEventListeners();const w=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._image=this._popupElement.querySelector(".modal__card-image"),this._title=this._popupElement.querySelector(".modal__card-title")}open(e,t){this._title.textContent=e,this._image.alt=e,this._image.src=t,super.open()}}({popupSelector:"#preview-image-modal"});w.setEventListeners();const x=new class extends s{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._handleFormSubmit=s,this._deleteButton=this._popupElement.querySelector(".card__delete-button"),this._isSubmitted=!1,this._cardId=null,this._card=null}open(e,t){this._card=e,this._cardId=t,super.open()}getIsSubmitted(){return this._isSubmitted}confirmDeletion(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("click",(e=>{e.preventDefault(),this._isSubmitted=!0,this._handleFormSubmit(this._card,this._cardId)}))}}({popupSelector:"#remove-card-modal",handleFormSubmit:()=>{}});x.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,